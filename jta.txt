数据库交易
原子化 每笔交易成或败
一致性 从一个有效状态到另一个
隔离 交易序列化地执行才能够使得系统状态
持久性 交易提交则不变

分布式事务
包含两个或多个网络主机，主机提供事务资源，全球化交易
2pc 一个分布式算法：协调所有在分布式原子化事务中的提交或rollback，通常应用在短时间的提交更新；长时间分布式事务需要更复杂的技术，特别在web service中
假定：一个节点被定义为协调者 
每个节点有稳定的存储进行writeahead log，在任何crash中永不丢失
没有节点永远crash
任何两个节点可以通信

2pc 的基本算法
1 提交请求阶段
协调者发送一个query给每个剩余节点直到收到所有回复
其他节点到被征询提交才执行事务，并且写入记录到redo undo日志
如果成功cohort回复agreement，否则abort

2 提交阶段
协调者收到所有cohort的agreement回复则
协调者发送commit消息给所有cohort
每个cohort完成操作并释放事务中所占有的资源和lock
每个cohort发送acknowledgement给协调者
所有acknowledgement都收到则协调者完成事务

如果产生失败：
协调者发送rollback给所有cohort
每个cohort使用undo log undo事务，并释放
每个cohort发送acknowledgement给协调者
协调者undo事务

x/open xa

一份对分布式事务处理的说明
说明如何将不同的数据存储中的事务变成一个原子的事务并通过2pc执行
一类交易协调允许许多资源参与一个可协调的原子更新的操作中
xa说明描述了如何管理资源使得事务成功，xa-服从者

xa事务
一个或多个资源管理者 提供资源，一个事务管理者 协调部分事务，进行全球事务
单个事务是全球事务的分支
使每个节点都能能够提交或rollback才能进行全球事务
根据每个成分报告的成功能力，他们必须成为原子化组进行提交或回滚
过程：1所有分支准备好2事务管理者通知资源管理者是否提交或回滚
全球事务






















